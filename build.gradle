plugins {
  alias libs.plugins.loom
}

allprojects {
  version = mod_version
  group = maven_group

  tasks.withType Jar configureEach {
    from rootProject.file('LICENSE')
  }
}

def commonConfig(Project project) {
  def isRoot = project == rootProject

  project.java {
    toolchain.languageVersion = JavaLanguageVersion.of project.java_version
    withSourcesJar()
  }

  project.dependencies {
    minecraft group: 'com.mojang', name: 'minecraft', version: project.minecraft_version
    mappings project.loom.officialMojangMappings()
    modImplementation libs.loader
    if (!isRoot) {
      modImplementation fabricApi.module('fabric-resource-loader-v0', project.fabric_api_version)
      modImplementation fabricApi.module('fabric-key-binding-api-v1', project.fabric_api_version)
      testImplementation libs.junit
      testImplementation libs.loader.junit
      testImplementation libs.mockito
      testImplementation libs.mojang.logging

      def ap = rootProject.project(':ap')
      if (project != ap) {
        modImplementation ap

        def core = rootProject.project(':core')
        if (project != core) {
          implementation core
        }
      }
    }
  }

  project.test {
    useJUnitPlatform()
    workingDir = rootProject.layout.buildDirectory.file 'test-run'
    workingDir.mkdir()
  }

  project.processResources {
    inputs.property 'properties', project.properties.toString()
    filesMatching 'fabric.mod.json', {
      expand project.properties
    }
  }

  if (!isRoot)
    rootProject.dependencies {
      include project
    }
}

commonConfig project

base.archivesName = mod_id
