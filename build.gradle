plugins {
  alias libs.plugins.loom
}

allprojects {
  version = mod_version
  group = maven_group

  test {
    useJUnitPlatform()
    workingDir = rootProject.layout.buildDirectory.file 'test-run'
    workingDir.mkdir()
  }

  tasks.withType Jar configureEach {
    from rootProject.file('LICENSE')
  }
}

def commonConfig(Project project) {
  project.java {
    toolchain.languageVersion = JavaLanguageVersion.of project.java_version
    withSourcesJar()
  }

  project.dependencies {
    minecraft group: 'com.mojang', name: 'minecraft', version: project.minecraft_version
    mappings project.loom.officialMojangMappings()
    modImplementation libs.loader
    modImplementation fabricApi.module('fabric-resource-loader-v0', project.fabric_api_version)
    modImplementation fabricApi.module('fabric-key-binding-api-v1', project.fabric_api_version)
    testImplementation libs.junit
    testImplementation libs.loader.junit
    testImplementation libs.mockito
    testImplementation libs.mojang.logging
  }

  project.processResources {
    inputs.property 'properties', project.properties.toString()
    filesMatching 'fabric.mod.json', {
      expand project.properties
    }
  }
}

commonConfig project

base.archivesName = mod_id

dependencies {
  project ':ap' with {
    modImplementation it
    include it
  }
//  include project(':mod:v1.14')
}
