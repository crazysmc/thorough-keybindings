import com.vdurmont.semver4j.Semver

plugins {
  id 'fabric-loom' version libs.versions.loom
  id 'ploceus' version libs.versions.loom
}

version = "$mod_version+mc${libs.versions.minecraft.get()}"
group = maven_group
base.archivesName = mod_id

dependencies {
  minecraft libs.minecraft

  mappings loom.layered {
    mappings variantOf(libs.feather) { classifier 'v2' }
    addLayer ploceus.nestedMappings()
  }
  if (libs.hasProperty 'nests')
    nests libs.nests

  modImplementation libs.loader
  ploceus.addCommonLibraries()
  ploceus.dependOsl libs.versions.osl.get()

  implementation project(':ap')
  annotationProcessor project(':ap')
  testImplementation libs.junit
}

java {
  sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
  withSourcesJar()
}

sourceSets.main {
  def mc = new Semver(libs.versions.minecraft.get(), Semver.SemverType.LOOSE)
  def set = 'v1.3'
  if (mc >= new Semver('1.7.0-'))
    set = 'v1.7'
  if (mc >= new Semver('1.9.0-'))
    set = 'v1.9'
  java.srcDir "src/$set/java"
  resources.srcDir "src/$set/resources"
}

test {
  useJUnitPlatform()
}

processResources {
  filesMatching 'fabric.mod.json', { expand project.properties }
}

runClient {
  systemProperty 'mixin.debug.export', true
  systemProperty 'mixin.debug.export.filter', 'net.minecraft.**'
  args += ['--userProperties', '{}']
}

tasks.withType Jar configureEach {
  from rootProject.file('LICENSE')

  def ap = (project ':ap' tasks).compileJava
  dependsOn ap
  from ap.outputs
}
